# Default configuration for recommender system

# Data paths
data:
  train_path: "../../data/lavka/train.parquet"
  test_path: "../../data/lavka/test.parquet"
  target_days: 30
  holdout:
    enabled: true
    holdout_days: 30
  cleaning:
    remove_view_only_requests: false

# Output settings
output:
  results_dir: "results"
  model_cache_dir: "results/model_cache"
  feature_cache_dir: "results/feature_cache"
  feature_selection_cache_dir: "results/feature_selection_cache"
  metrics_dir: "results/metrics"
  visualizations_dir: "results/visualizations"
  save_model: true
  save_predictions: true
  save_evaluation_results: true  # Save Kaggle simulation evaluation results

# Logging configuration
logging:
  console_level: "INFO"
  file_level: "DEBUG"
  file: "lavka_recsys.log"

# Model configuration
model:
  type: "catboost_ranker"
  use_gpu: true                  # Enable/disable GPU usage
  gpu_devices: "4,5"            # GPU device IDs (comma-separated string for multi-GPU)
  thread_count: -1                # Number of CPU threads (-1 means auto)
  config:
    catboost_classifier:
      loss_function: "Logloss"
      eval_metric: "NDCG:top=10"
      early_stopping_rounds: 50
      custom_metric: ["AUC"]
      iterations: 500
      learning_rate: 0.1
      depth: 6
      l2_leaf_reg: 3.0
    catboost_ranker:
      iterations: 500                    # Increased iterations for better convergence
      loss_function: "YetiRankPairwise"  # Changed to pairwise loss for better ranking
      eval_metric: "NDCG:top=10"
      early_stopping_rounds: 50
      custom_metric: ["NDCG:top=10", "PrecisionAt:top=10", "RecallAt:top=10"]
      # learning_rate: 0.05         # Lower learning rate for better generalization
      # depth: 8                    # Deeper trees for more complex relationships
      # l2_leaf_reg: 3.0
    single_feature:
      feature_name: "product_total_purchases"
      desc: True

# Target definition
target: "CartUpdate_vs_View"

# Feature generators
feature_generators:
  - "source_type"
  - "count_purchase_user_product"
  - "count_purchase_user_store"
  - "ctr_product"
  - "cart_to_purchase_rate"         
  - "purchase_view_ratio"          
  # - "recency_user_product"
  # - "user_stats"
  # - "product_stats"
  # - "store_stats"
  # - "city_stats"
  # - "product_temporal_patterns"
  # - "recency_user_store"
  # - "time_features_cycl"
  # - "time_window_user_product"
  # - "session_features"
  # - "frequency_features"
  # - "product_popularity_trend"
  # - "cross_features"
  # - "user_segments"
  # - "memory-based-cf"       # Collaborative filtering
  # - "npmi-cf"               # Collaborative filtering
  # - "puresvd-cf"            # Collaborative filtering
  # - "svd-cf"                # Collaborative filtering
  # - "bpr-popular"           # Implicit item2item
  - "product_embeddings"    # NLP feature
  - "category_embeddings"   # NLP feature
  - "user_product_similarity" # Weighted similarity between user history and product
  - "text_similarity_cluster" # Product clusters based on text similarity
  - "text_diversity_features" # How different a product is from user's history

# Feature generation settings
feature_config:
  session_window_minutes: 30  # Session window duration in minutes
  user_segments:
    new_user_threshold: 5      # Less than this many interactions is a new user
    high_converter_threshold: 0.2  # Users with purchase rate above this are high converters
    power_user_threshold: 20    # Users with more interactions than this are power users
    loyal_user_days: 30        # Users active for more than this many days are loyal
  text_processing:
    model_type: "sentence-transformers"
    model_name: "paraphrase-multilingual-MiniLM-L12-v2"  # Small but effective model
    embedding_dimensions: 20  # Reduce dimensionality for efficiency